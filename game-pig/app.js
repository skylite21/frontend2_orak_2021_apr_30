// DOM Manipul√°ci√≥: js-el m√≥dos√≠tjuk a html-t √©s a css-t

let scores, roundScore, activePlayer;
function init() {
  // a k√©t j√°t√©kos pontsz√°ma, egy 2 elem≈± t√∂mbben lesz t√°rolva...
  // az els≈ë elem az els≈ë j√°t√©kos pontsz√°ma, a m√°sodik a m√°sodik j√°t√©kos
  // pontsz√°ma
  scores = [0,0];

  // az aktu√°lis j√°t√©kos k√∂r alatt megszerezett pontnai
  roundScore = 0;

  // mind√≠g az els≈ë j√°t√©kos kezd
  activePlayer = 0;

  // be√°ll√≠tjuk a kezd≈ë √©rt√©keket a UI-on is
  document.querySelector('#score-0').textContent = 0;
  document.querySelector('#score-1').textContent = 0;
  document.querySelector('#current-0').textContent = 0;
  document.querySelector('#current-1').textContent = 0;

  // a j√°t√©k kezdetekor a kock√°t elt√ºntetj√ºk:
  // inline style-t adunk hozz√° az img-hez...
  document.querySelector('.dice').style.display = 'none';
  // a gombokat megjelen√≠tj√ºk
  document.querySelector('.btn-roll').style.display = 'block';
  document.querySelector('.btn-hold').style.display = 'block';

  document.querySelector('#name-0').textContent = 'Player 1';
  document.querySelector('#name-1').textContent = 'Player 2';

  document.querySelector('.player-0-panel').classList.remove('winner');
  document.querySelector('.player-1-panel').classList.remove('winner');

  document.querySelector('.player-1-panel').classList.remove('active');
  document.querySelector('.player-0-panel').classList.add('active');

}

init();
document.querySelector('.btn-new').addEventListener('click', init);

// ha a roll dice gombra kattint a user...
document.querySelector('.btn-roll').addEventListener('click', function() {
  // console.log('rolling the dice...');
  // 1. gener√°lunk egy random sz√°mot 1 √©s 6 k√∂z√∂tt
  let dice = Math.floor(Math.random() * 6 ) + 1;
  // console.log(dice);
  // 2. Az eredm√©nyt megjeln√≠tj√ºk a UI-on:
  let diceDOM = document.querySelector('.dice');
  diceDOM.style.display = 'block';
  //                            üëáüèªstring concatenation, sztring √∂sszef≈±z√©s
  diceDOM.setAttribute('src', 'dice-'+dice+'.png');


  // Ha a ha j√°t√©kos 1-est dob, a roundScore √©rt√©k√©t elveszti, √©s
  // a k√∂vetkez≈ë j√°t√©kos j√∂n.
  
  if (dice !==1) {
  // A dobot √©rt√©ket kisz√°moljuk, majd megjelen√≠tj√ºk a piros dobozban... 
    roundScore = roundScore + dice;

    document.querySelector('#current-'+activePlayer).textContent = roundScore;

    // ha a h√°t√©kos 1-est dobott:
  } else {
    nextPlayer();
  }

});


// DRY: do not repeat yourself.

function nextPlayer() {
// roundScore √©rt√©ket null√°zzuk a UI-on is:
  document.querySelector('#current-'+activePlayer).textContent = 0;
  // a k√∂vetkez≈ë j√°t√©kos j√∂n
  if(activePlayer === 0) {
    activePlayer = 1;
  } else {
    activePlayer = 0;
  }
  roundScore = 0;
  // toggle: ha rajta volt a class akkor leveszi, ha nem volt rajta
  // akkor r√°rakja...
  document.querySelector('.player-0-panel').classList.toggle('active');
  document.querySelector('.player-1-panel').classList.toggle('active');
}


// ha a hold gombra r√°nyom a j√°t√©kos
document.querySelector('.btn-hold').addEventListener('click', function() {
  // a j√°t√©kos megszerzi a k√∂r alatt szerzett pontjait
  // az el≈ëz≈ë √©rt√©k plusz a mostani...
  scores[activePlayer] = scores[activePlayer] + roundScore;
  // update the UI
  document.querySelector('#score-'+activePlayer).textContent = scores[activePlayer];
 
  // ellen≈ërizz√ºk hogy van e nyertes:
  if(scores[activePlayer] >= 20) {
    // j√°t√©k v√©ge
    document.querySelector('.player-'+activePlayer+'-panel').classList.add('winner');
    document.querySelector('.player-'+activePlayer+'-panel').classList.remove('active');

    document.querySelector('#name-'+activePlayer).textContent = 'Winner!';
    document.querySelector('.dice').style.display = 'none';
    document.querySelector('.btn-roll').style.display = 'none';
    document.querySelector('.btn-hold').style.display = 'none';

  // ha nincs nyertes, akkor a k√∂vetkez≈ë j√°t√©kos j√∂n
  } else {
    nextPlayer();
  }
});
